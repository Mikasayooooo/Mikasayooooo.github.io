<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>浏览器</title>
    <url>/2020/02/03/%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    <content><![CDATA[<p>浏览器内核包括：渲染引擎，JS引擎</p>
<p>内核种类：Trident（IE浏览器）、Gecko（firefox浏览器）、webkit（safari浏览器）、chromiun/blink（chrome浏览器）、presto（opera浏览器 后改用blink内核）</p>
<p>web标准：</p>
<p>1、结构标准：XML和XHTML </p>
<p>2、样式标准： CSS</p>
<p>3、行为标准：JS</p>
]]></content>
  </entry>
  <entry>
    <title>css</title>
    <url>/2020/02/03/css/</url>
    <content><![CDATA[<p><strong>CSS样式规则</strong></p>
<p>格式：选择器{ 属性：属性值；属性：属性值；}</p>
<p>规则：</p>
<ol>
<li>选择器用于指定CSS样式作用的html对象，花括号内是具体的样式</li>
<li>属性和属性值以“键対值”的形式出现 </li>
<li>属性是对指定的对象设置的样式属性，例如字体大小，文本颜色等</li>
<li>属性和属性值之间用英文”:”链接 不是等号</li>
<li>多个键值对之间用英文”;”区分</li>
</ol>
<p><strong>字体设置</strong></p>
<p>CSS Unicode字体</p>
<p>微软雅黑 \5FAE\8F6F\96C5\9ED1</p>
<p>宋体 \5B8B\4F53</p>
<p>尽量只写unicode字体 写宋体和微软雅黑</p>
<p>CSS中注释方式：/<em>xxxxx</em>/ </p>
<p><strong>设置字体样式：font-family:**</strong>”<strong><strong>xxx</strong></strong>”**</p>
<p><strong>设置字体字号：font-size:**</strong>”<strong><strong>xxpx</strong></strong>”**</p>
<p><strong>字体字号常用技巧：</strong></p>
<p><strong>网页中正文普遍使用**</strong>14px**</p>
<p><strong>若有设置多个字体，则字体之间应用**</strong>英文逗号隔开**</p>
<p><strong>中文字体需要加英文双引号**</strong>，英文字体不需要，且<strong>**英文字体应在中文字体之前</strong></p>
<p><strong>若字体中包**</strong>含空格、π、$等符号<strong><strong>，无论是英文还是中文字体都</strong></strong>必须加引号**</p>
<p><strong>尽量使用系统默认字体</strong></p>
<p><strong>设置字体粗细</strong></p>
<p><strong>Font-weight:</strong></p>
<p><strong>可用属性值包括normal（即400）、bold（即700）、bolder、lighter、100-900之间100的整倍数</strong></p>
<p><strong>设置字体风格</strong></p>
<p><strong>Font-style:</strong></p>
<p><strong>可用属性值包括normal,italic(斜体)</strong></p>
<p><strong>字体综合设置</strong></p>
<p><strong>选择器{font：font-style font-weight font-size/line-height font-family；}</strong></p>
<p><strong>注意：</strong></p>
<p><strong>不能更换顺序，以空格隔开</strong></p>
<p><strong>不需要设置的属性可以忽略</strong></p>
<p><strong>选择器</strong></p>
<p><strong>标签选择器</strong> </p>
<p>格式：</p>
<p>标签名{属性1：属性值1；属性2：属性值2；属性3：属性值3；}</p>
<p><strong>类选择器</strong></p>
<p>格式</p>
<p>.类名{属性1：属性值1；属性2：属性值2；属性3：属性值3；}</p>
<p>标签调用时用class=“类名”即可</p>
<p>命名规范：</p>
<ol>
<li>长名称或词组可以使用中横线来为选择器命名</li>
<li>不建议使用“_”下划线命名css选择器</li>
<li>不要纯数字、中文等命名，尽量使用英文字母</li>
</ol>
<p><strong>多类名选择器</strong></p>
<p>即一个标签带多个类名，从而实现灵活自由搭配</p>
<p>例：<div class="font20 blue">傻逼</div></p>
<pre><code>&lt;div class=&quot;font14 blue&quot;&gt;憨憨&lt;/div&gt;

&lt;div class=&quot;font20 orange&quot;&gt;傻逼&lt;/div&gt;

&lt;div class=&quot;font14 orange&quot;&gt;傻逼&lt;/div&gt;</code></pre><p>1.样式显示效果跟html中的类名先后顺序无关</p>
<p>2.各个类名中间用空格隔开</p>
<p><strong>交集选择器</strong></p>
<style>

标签名.类名{}

</style>



<p><strong>并集选择器</strong></p>
<style>

标签名,

标签名,

标签名,

标签名{}      一般上下写

</style>



<p><strong>Id选择器</strong></p>
<p>语法格式：</p>
<p>#id名{}</p>
<p><xx id=””></xx></p>
<p><strong>Id与类选择器区别：一个id只能用于一个标签，类可以用于多个标签。</strong></p>
<p><strong>链接伪类选择器</strong></p>
<p>语法格式</p>
<p><strong>：link{}  设置未点击链接时链接的样式</strong></p>
<p><strong>：visited{} 设置点击链接后链接的样式</strong></p>
<p><strong>：hover{}  设置鼠标移动到链接时的样式</strong></p>
<p><strong>：active{}  设置鼠标点击链接且不松开时的样式</strong></p>
<p>注意：必须按照以上<strong>lvha</strong>的顺序</p>
<p>一般工作不需要用到active和visited，所以有以下便捷写法*/</p>
<p>​        a{color:gray;}a:hover{color:red;}</p>
<p><strong>结构伪类选择器(原理:先找到XX元素的父元素，再找这个父元素的第指定个元素，如果不与xx元素相同则无视。即是相对于父元素的结构伪类）</strong></p>
<p><strong>n是从0到指定的元素个数</strong></p>
<p>xx:first-child{}     选择xx元素中的第一个子元素</p>
<p>Xx:last-child{}     选择xx元素中的最后一个子元素</p>
<p>Xx：nth-child（y）{}  选择xx元素中的第y个子元素</p>
<p>Xx：nth-child（n）{}  选择所有子元素</p>
<p>Xx：nth-child（even）{} 选择所有第偶数个子元素</p>
<p>Xx：nth-child（odd）{} 选择所有第奇数个子元素</p>
<p>Xx：nth-child（2n）{} 选择所有第偶数个子元素</p>
<p>Xx：nth-child（2n+1）{}   选择所有第奇数个子元素</p>
<p>Xx：nth-last-child（）{} 与上面相同，但是是倒数</p>
<p>xx：nth-child（-n+y）{} 选择前y个</p>
<p>xx:nth-of-type(n){}  只认定xx元素同级元素中所有xx元素。即所有xx元素中的第n个</p>
<p>xx:nth-last-of-type （）{} 倒数</p>
<p><strong>兄弟伪类选择器</strong></p>
<p><strong>xx + yy {}  加号代表与xx元素相邻的yy元素 必须是相邻的</strong></p>
<p><strong>xx ~ yy{}波浪号代表满足条件的所有xx的兄弟元素</strong></p>
<p><strong>伪元素选择器</strong></p>
<p>X：：first-letter{}  选中x标签中文档的第一个字</p>
<p>X：：first-line{} 选中x标签中文档的第一行</p>
<p>X：：selection{} 使选中的文字发生实时变化（只能改变显示样式不能改变内容大小）</p>
<p>X：：before{content：”xx”;}在x文档的开头添加文字xx</p>
<p>X：：after{content:”xx”；}在x文档的结尾添加文字XX</p>
<p><strong>伪元素的本质</strong></p>
<p><strong>伪元素本质为行内元素，改为块级元素(或者浮动、定位）后可以设置宽高，伪元素不占位置。设置：before和：after时必须设置content属性，否则伪元素不起作用</strong></p>
<p><strong>后代选择器</strong></p>
<p>父标签 子孙标签{}</p>
<p><strong>可以选择父标签内的所有对应子标签、孙标签、重孙标签。。。</strong></p>
<p><strong>子元素选择器</strong></p>
<p>父标签&gt;字标签{}</p>
<p><strong>只能选择父标签的亲生儿子标签。</strong></p>
<p><strong>属性选择器</strong></p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C2737e925ba48495f9340f235352dd41f%5Cimage1.jpeg" alt="img"></p>
<p>target样式：可以为锚点目标元素添加样式，当目标元素被触发为当前锚点链接的目标时，调用此样式</p>
<p>语法 目标链接：target {样式;}</p>
<p><strong>颜色</strong></p>
<p><strong>CSS颜色三种表达方式</strong></p>
<p><strong>1.直接用名字表示 color：red</strong></p>
<p><strong>2.用16进制代码表示  color：#ffb100</strong></p>
<p><strong>3.用rgb代码表示 rgb（192，255，252） 分别代表红绿蓝，16进制数</strong></p>
<p><strong>4.rgba（x，x，x，x）最后一个数值可以设置半透明度</strong></p>
<p><strong>5.hsl（颜色，饱和度，亮度）；  颜色0<del>360  饱和度、亮度0%</del>100%</strong></p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C985e489566514fd6852b5a3811eb1088%5Color.png" alt="img"></p>
<p><strong>行高对齐和首行缩进</strong></p>
<p>行间距：line-height：xxpx;</p>
<p>首行缩进  text-indent：xxem；</p>
<p>字间距:letter-spacing</p>
<p><strong>文字阴影</strong></p>
<p>Text-shadow:水平位置(px) 垂直位置(px) 模糊距离(px) 阴影颜色(rgba);</p>
<p><strong>CSS书写规范</strong></p>
<p><strong>1.选择器与花括号之间必有空格</strong></p>
<p><strong>2.属性名与冒号之间不允许有空格，冒号后必须有空格</strong></p>
<p><strong>3.属性值后必须加分号</strong></p>
<p><strong>4.当选择器有多个并行标签时，应上下逗号分开</strong></p>
<p><strong>5.选择器的嵌套尽量不超三层</strong> </p>
<p><strong>6.不同属性应另起一行</strong></p>
<p><strong>CSS样式表</strong></p>
<p><strong>内部样式表</strong></p>
<head>

<style type=’’text/CSS’’>

选择器 {属性1：属性值1；属性2：属性值2；属性3：属性值3；}

</style>

<meta name="generator" content="Hexo 4.2.0"></head>

<p><strong>行内样式表</strong></p>
<p>&lt;标签名 style=’’属性1：属性值1；属性2：属性值2；属性3：属性值3；”&gt;</p>
<p><strong>外部样式表</strong></p>
<head>

<link href=’’css的路径’’ type=’’text/css’’ rel=’’stylesheet’’ />   是个单标签

</head>



<p>总结：推荐使用外部样式表</p>
<p><strong>标签显示类型</strong></p>
<p><strong>块级标签</strong></p>
<p>如<h1> <p> <div> <ul> <ol> <li>等</p>
<p>块级元素特点：</p>
<ol>
<li>总是从新行开始</li>
<li>高度、行高、外边距以及内边距都可以控制</li>
<li>宽度默认是容器的100%</li>
<li>可以容纳内联元素和其他块元素</li>
</ol>
<p><strong>行内元素</strong></p>
<p>如<a> <strong><b><em><i><del><s><ins><u><span>等</p>
<p>特点：</p>
<ol>
<li>和相邻行内元素在一行上</li>
<li>高宽无效，但水平方向的padding和maigin可以设置，垂直方向的无效</li>
<li>默认宽度是它本身内容的宽度</li>
<li>行内元素只能容纳文本或其他行内元素</li>
</ol>
<p>注意：文字标签里不能放块级元素。链接里不能再放链接</p>
<p><strong>行内块元素</strong></p>
<p>如<img/><input/><td>等</p>
<p>特点：</p>
<ol>
<li>和相邻行内元素在一行上，但是之间会有空白缝隙</li>
<li>默认宽度就是它本身内容的宽度</li>
<li>高度，行高，外边距以及内边距都可以控制</li>
</ol>
<p><strong>背景图设置</strong></p>
<p>Background-img:url（）；背景图地址</p>
<p>Background-color:；设置背景颜色</p>
<p>Background-repeat:；设置平铺方式  有no-repeat、repeat-x、repeat-y、space、round选项，分别对应全平铺，x轴方向平铺，y轴方向平铺,图片不缩放并增加空隙后平铺，图片缩放后使其紧贴平铺 </p>
<p><strong>设置背景图位置</strong></p>
<p>Background-position：x轴方向像素 y轴方向像素；</p>
<p>Background-posiiton：方位词 方位词；（无先后顺序之分）top bottom left right center</p>
<p>Background-position：方位词+y像素（x像素+方位词）；</p>
<p><strong>背景图平铺开始位置</strong></p>
<p>background-origin:border-box,padding-box,content-box(即从border、padding、content开始平铺）</p>
<p>bcakground-clip:border-box,padding-box,content-box(即分别只显示border及以内、padding及以内、content的内容）</p>
<p><strong>背景附着</strong></p>
<p>Background-attachment：scroll（fixed） 前者为默认随对象内容滚动，后者为背景图像固定 local</p>
<p>背景简写：background：color  url 平铺方式 滚动方式 位置;（尽量采用此顺序）</p>
<p>背景半透明：在颜色设置中采用rgba（x，x，x，0.x）最后为透明度数值</p>
<p><strong>背景缩放：</strong></p>
<p>Background-size：xxpx xxpx；   </p>
<p>Background-size：xx% xx%；</p>
<p>Background-size：contain；    自动调整缩放比例保证图片完整显示</p>
<p>Background-size：cover；    自动调整缩放比例保证图片填充满背景区域</p>
<p><strong>多背景图片</strong></p>
<p>Background-image：url（），url（）；</p>
<p>Background：url（xxxx）……，url（xxx） ……；   不同图片以逗号隔开</p>
<p><strong>凹陷文字效果</strong></p>
<p>突出效果：</p>
<p>div:first-child{</p>
<p>​                text-shadow: 2px 2px 2px #000,</p>
<p>​                             -1px -1px 1px #fff;</p>
<p>​        }</p>
<p>凹陷效果：</p>
<p>​        div:last-child{</p>
<p>​                text-shadow: 1px 1px 1px #fff,</p>
<p>​                             -2px -2px 2px #000;</p>
<p>​        }</p>
<p>小技巧 将行距设置为盒子高度即可使文本垂直居中</p>
<p>Text-decoration：none 不设置下划线</p>
<p>Text-decoration：underline 设置下划线</p>
<p>Text-decoration：overline 设置上划线</p>
<p>Text-decoration：line-through 设置穿过文本的一条线</p>
<p><strong>CSS三大特性:层叠性、继承性、优先级</strong></p>
<p><strong>层叠性</strong></p>
<p>当同个标签设置样式属性不同值出现冲突时，则依照就近原则以最后的样式属性为准。</p>
<p><strong>继承性</strong></p>
<p>子元素能继承父元素的样式</p>
<p><strong>优先级</strong></p>
<p><strong>CSS Speciality 权重值：</strong></p>
<p><strong>继承或*的贡献值   0,0,0,0</strong></p>
<p><strong>每个元素标签的贡献值 0,0,0,1</strong></p>
<p><strong>类、伪类、元素选择器的贡献值 0,0,1,0</strong></p>
<p><strong>Id选择器的贡献值 0,1,0,0</strong></p>
<p><strong>行内样式贡献值 1,0,0,0</strong></p>
<p><strong>！Important的贡献值 ∞无穷大</strong></p>
<p><strong>注意：</strong></p>
<p><strong>权重可以叠加 如：div ul li 的贡献值为0,0,0,3</strong></p>
<p><strong>数位之间没有进制</strong></p>
<p><strong>继承的权重为0</strong></p>
<p>总结优先级：</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5Ca87bcf2141da4adab14f5edcd014215f%5Cimage2.jpeg" alt="img"></p>
<p><strong>CSS盒子模型</strong></p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C6b378a9d525d45a583645aba74c937c7%5Cimage3.jpeg" alt="img"></p>
<p><strong>盒子边框</strong></p>
<p>Border-color：  设置边框颜色</p>
<p>Border-width： 设置边框厚度</p>
<p>Border-style： 设置边框类型</p>
<p>Style属性值有： </p>
<ol>
<li>实线solid</li>
<li>虚线dashed</li>
<li>点线dotted</li>
<li>双实现double</li>
</ol>
<p><strong>不同方向边框的写法</strong></p>
<p>border-top（left、right、bottom）-width（color、style）</p>
<p><strong>边框综合写法</strong></p>
<p>Border：width style color</p>
<p><strong>合并细线表格</strong></p>
<p>Border-collapse：collapse</p>
<p><strong>圆角矩形</strong></p>
<p>Border-radius:xxpx(xx%)     设置四个角</p>
<p>Border-radius:xx xx     设置左上右下  左下右上</p>
<p>Border-radius：XX XX XX 设置左上 左下右上 右下</p>
<p>Border-radius：xx xx xx xx   左上 右上 右下 左下</p>
<p>border-radius:xx/xx     设置每个角的水平/垂直方向</p>
<p>border-方位词-方位词-radius：xxpx； 如broder-top-right-radius</p>
<p>border-radius：x1 x3 x5 x7/x2 x4 x6 x8;    x1x2为左上 x3x4右上 以此类推    </p>
<p><strong>边框图片</strong></p>
<p>border-image-source：url（）；</p>
<p>border-image-slice：xx fill； 图片切片，不需加单位,即将图片四个边xx像素的宽度作为边框 fill则是将整个图片填充 </p>
<p>border-image-width:xxpx 设置边框背景图宽度 但是不影响内容放置</p>
<p>border-image-outset:0  边框扩展，一般为0</p>
<p>border-image-repeat:repeat/round (前者直接平铺 后者缩放后平铺）</p>
<p>简写 border-image:source slice /width/outset repeat;</p>
<p><strong>盒子内边距</strong></p>
<p>Padding：xx     设置四个边距</p>
<p>Padding：xx xx    设置上下 左右边距</p>
<p>Padding：xx xx xx   设置 上 左右 下边距</p>
<p>Padding：xx xx xx xx   设置上 右 下 左 边距</p>
<p><strong>Firework工具 滴管查颜色 切片查距离</strong></p>
<p><strong>清除内外边距</strong></p>
<p>* {padding：0；margin：0}</p>
<p><strong>行内元素只有左右内外边距没有上下内外边距，尽量不要给行内元素指定上下内外边距</strong></p>
<p><strong>外边距合并的问题</strong></p>
<p>垂直相邻的块元素，若上面的元素有margin-bottom，下面额块元素有margin-top，则他们之间的外边距之和不是两者相加而是两者较大者。这种现象被称为相邻块元素垂直外边距的合并</p>
<p>解决方法：只设置一个盒子的外边距即可</p>
<p><strong>嵌套块元素的合并</strong></p>
<p>对于两个嵌套关系的块元素，如果父元素没有上内边距及边框，则父元素的上外边距会子元素的上外边距合并，合并结果为两者中较大者。</p>
<p><strong>解决方法：1.为父元素定义1像素的边距或内边距2.可以为父元素添加overflow：hidden</strong></p>
<p><strong>盒子尺寸计算</strong></p>
<p>外盒尺寸=width（height）+padding+border+margin</p>
<p>内盒尺寸=width(height)+padding+border</p>
<p>注意：</p>
<ol>
<li>width和height对行内元素无效</li>
<li>要考虑上下两个盒子的外边距合并</li>
<li>若盒子没有指定高度或宽度（或继承了父元素的高度或宽度），则padding不会影响整体高度或宽度</li>
</ol>
<p><strong>盒子模型布局稳定性</strong></p>
<p><strong>使用优先级：width&gt;padding&gt;margin</strong></p>
<p>原因：</p>
<p>1.margin会有外边距合并，还有ie6下面margin加倍的bug</p>
<p>2.padding会影响盒子大小，需要进行加减计算</p>
<p>3.Width没有问题，常用宽度剩余法 高度剩余法来做</p>
<p><strong>CSS3盒模型</strong></p>
<p><strong>1.box-sizing：content-box</strong>   </p>
<p>盒子大小为width+padding+border 为默认值</p>
<p><strong>2.box-sizing：border-box</strong>  </p>
<p>盒子大小为width 即padding和border包含到了width里面 如果为这个值，则设置padding时不用重新计算</p>
<p><strong>盒子阴影</strong></p>
<p><strong>box-shadow: 0px 10px 10px 10px rgba(0 ,0 ,0 , .3)  inset    分别设置 水平距离 垂直距离 模糊距离 阴影大小 颜色 内阴影/外阴影</strong></p>
<p><strong>文档流</strong></p>
<p><strong>类型</strong></p>
<p><strong>1.普通流：网页内标签正常地从上到下从左到右的排序，如块级元素独占一行，行内元素会依照顺序依次前后排列</strong></p>
<p><strong>2.浮动</strong></p>
<p><strong>3.定位</strong></p>
<p><strong>浮动：指设置了浮动属性的元素会脱离标准普通流的控制，移动到其父元素中指定位置的过程。</strong></p>
<p>语法：选择器{float：属性值；}</p>
<p>属性值：left、right、none</p>
<p>使用浮动首先要添加标准流父盒，从而防止布局失真</p>
<p>浮动特性</p>
<ol>
<li>父盒内的盒子设置浮动后会就近对齐父盒子，但不会遮盖padding和margin</li>
<li>兄弟盒子中第一个盒子如果浮动，第二个盒子设置浮动后会与其顶部对齐。若第一个盒子不浮动，第二个盒子设置浮动后顶部会与其底部对齐</li>
</ol>
<p>元素（包括块级和行内）添加浮动后，都会具有行内块元素的特性</p>
<p>总结：float==&gt;浮漏特</p>
<p>浮：加了浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面</p>
<p>漏：加了浮动的盒子，不占位置的，他浮起来了，他原来的位置漏给了标准流的盒子</p>
<p>特：特别注意要和标准流父级搭配使用。</p>
<p><strong>清除浮动</strong></p>
<p><strong>在一般情况下，考虑到子盒子的内容变化，父盒子都不方便设置高度。子盒子没有浮动时会自动撑开父盒子。如果子盒子浮动，则父盒子高度会变为0，导致其他盒子占据位置。</strong></p>
<p><strong>清除浮动就是解决没有设置高度的父盒子在子盒子浮动后高度变为0的现象</strong></p>
<p><strong>解决方法</strong></p>
<p><strong>1.在父盒子中添加overflow：hidden；</strong></p>
<p><strong>2.浮动盒子后添加空标签，且将该标签的clear属性值设置为both</strong></p>
<p><strong>.clear {</strong></p>
<p>​            <strong>clear: both;**</strong>}**  <strong>清除浮动的影响</strong></p>
<p><strong>3.用after伪元素清除浮动（推荐）</strong></p>
<p><strong>父盒子类名添加 clearfix</strong></p>
<p><strong>.clearfix:after {</strong></p>
<p>​            <strong>content: ‘.’;</strong></p>
<p>​            <strong>display: block;</strong></p>
<p>​            <strong>height: 0;</strong></p>
<p>​            <strong>visibility:hidden;</strong></p>
<p>​            <strong>clear: both;</strong> </p>
<p>​        <strong>}</strong></p>
<p><strong>4.用before和after伪元素清除浮动（推荐）</strong></p>
<p><strong>父盒子类名添加clearfix</strong></p>
<p><strong>.clearfix:before,.clearfix:after {display:table;content:**</strong>’** <strong>‘**</strong>;}**</p>
<p><strong>.clearfix:after {clear:both;}</strong></p>
<p><strong>.clearfix {*zoom:1;}</strong></p>
<p><strong>定位（包括定位模式和边偏移）</strong></p>
<p><strong>边偏移</strong></p>
<p>Top bottom left right</p>
<p><strong>定位模式</strong></p>
<p><strong>语法：</strong></p>
<p><strong>Position：{属性值；}</strong></p>
<p><strong>属性值：</strong></p>
<ol>
<li><strong>静态定位static：</strong></li>
<li><strong>相对定位relative：</strong></li>
<li><strong>绝对定位absolute</strong></li>
<li><strong>固定定位fixed</strong></li>
</ol>
<p><strong>Static定位：</strong></p>
<p>默认，该定位下无法使用边偏移属性</p>
<p><strong>Relative定位：</strong></p>
<p>定位后可通过边偏移改变位置，是以自身左上角为基准。不脱标，依旧是标准流，原先位置保留</p>
<p><strong>Absolute定位：</strong></p>
<p>可通过边偏移改变位置，完全脱标不占位置。</p>
<p>子盒子设置为absolute后，父盒子必须定位为任何定位类型，子盒子才能以父盒子为基准设置边偏移改变位置，否则会乱跑</p>
<p><strong>子绝父相：一般子盒子设置为绝对定位后，父盒子要设置为相对定位较好</strong></p>
<p><strong>水平/垂直居中：盒子设置绝对定位后，margin中的auto无效（具体数值有效）</strong></p>
<p>要居中一般是以：1首先left50%2.然后走外边距负的一半值即可</p>
<p>如：left：50%；margin-left：-xxpx；</p>
<p>Top：50%；margin-top：-xxpx；</p>
<p>或者 left：父盒子宽度一半减去子盒子宽度一半；top：父盒子高度一半减去子盒子高度一半</p>
<p><strong>Fixed定位</strong></p>
<ol>
<li>固定定位的元素跟父亲没有任何关系，只认浏览器</li>
<li>完全脱标,不占位置,不随着滚动条移动</li>
</ol>
<p><strong>叠加次序</strong></p>
<ol>
<li>index:正整数、负整数、0</li>
</ol>
<p>注意</p>
<p>1.index默认属性值为0，取值越大，定位元素在层叠元素中越居上</p>
<p>2.如果取值相同，则按顺序后来居上</p>
<p>3.后面数字不能家单位</p>
<p><strong>4.**</strong>只有相对定位绝对定位固定定位有这个属性。**</p>
<p><strong>定位总结</strong> </p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5Ce327bca0e0934129879d40ae19cfd22c%5Cimage4.jpeg" alt="img"></p>
<p><strong>固定绝对定位模式转换</strong></p>
<p>跟浮动一样,元素添加了绝对定位和固定定位之后,元素都会变成行内块模式</p>
<p>也就是；如果行内元素添加了绝对定位和固定定位后,可以不用转换模式,直接添加高度宽度。</p>
<p><strong>Display和visibility的使用</strong></p>
<p>Display设置或检索对象是否及如何显示</p>
<p>Display：none 隐藏对象</p>
<p>Display：block除了转换为块级元素之外还有显示元素的意思</p>
<p>特点：隐藏之后，不再保留位置</p>
<p>Visibility</p>
<p>设置或检索是否显示对象</p>
<p>Visible：对象可视</p>
<p>Hidden：对象隐藏</p>
<p>特点:隐藏之后,继续保留原有位置</p>
<p><strong>Overflow溢出</strong></p>
<p>属性值</p>
<p>Visible:不剪切内容也不添加滚动条 （默认）</p>
<p>Auto：超出自动显示滚动条,不超出不显示滚动条</p>
<p>Hidden：不显示超出对象内容的尺寸,超出的部分隐藏掉</p>
<p>Scroll：不管超出内容否,总是显示滚动条</p>
<p><strong>CSS高级技巧</strong></p>
<p><strong>鼠标样式</strong></p>
<p>cursor: default;    小白（默认） </p>
<p>cursor: pointer;    小手</p>
<p>cursor: text;     文本    </p>
<p>cursor: move;    移动</p>
<p><strong>取消轮廓线</strong></p>
<p>语法：</p>
<p>Outline : width style color;</p>
<p>一般为none</p>
<p><strong>防止拖拽文本</strong></p>
<p>textarea {resize: none;} </p>
<p><strong>行内块和文字对齐（一些低版本浏览器中盒子内的图片可能底部出现缝隙）</strong></p>
<p>Vertical-align:实现行内元素和行内块元素的对齐，对于块级元素无效</p>
<p>属性值包括 top、middle、bottom、baseline（默认）</p>
<p>一般选用middle </p>
<p><strong>去除图片底侧缝隙</strong></p>
<ol>
<li>将图片转为块级元素 display：block</li>
<li>将图片顶部对齐或者中线对齐  vertical-align：top（middle）  </li>
</ol>
<p><strong>Word-break用法</strong></p>
<p>Word-break：normal     默认方式</p>
<p>Word-break：break-all  允许单词中换行</p>
<p>Word-break：keep-all 只能在半角空格或连字符处换行</p>
<p><strong>White-space用法</strong></p>
<p>White-space：normal  默认处理方式    </p>
<p>White-space：nowrap 强制在同一行显示所有文本，直到1文本结束或遭遇br才换行</p>
<p><strong>Text-overflow使用</strong></p>
<p>Text-overflow:clip   不显示省略标记,而是简单的裁切</p>
<p>Text-overflow:ellipsis 当对象文本溢出时显示省略标记</p>
<p><strong>注意：**</strong>必须先使用white-space：nowrap和overflow：hidden两个属性后才能使用这个**</p>
<p><strong>精灵技术</strong></p>
<p>即将所有背景图通过一张图来显示</p>
<p>先设置对应元素的宽高，再设置background-position,注意此处应为负值</p>
<p><strong>字体图标</strong></p>
<p>网站：icomoon.io</p>
<p><strong>将下载后的icomoon文件夹中的font文件夹放到与html文件同个文件夹中，然后声明，声明后打开icomoon文件夹中的html文件复制小空格到目标元素中，再设置font-family。</strong></p>
<p>追加字体文件要利用icomoon文件夹中的selection文件</p>
<p><strong>滑动门技术</strong></p>
<p>固定语法</p>
<p>a里面包含span</p>
<p>不能设置宽度</p>
<p>A负责左边框，span负责右边框且背景图位置应设置为right</p>
<p>记得转换为块元素或行内块元素</p>
<p><strong>2D效果</strong></p>
<p><strong>过渡效果</strong></p>
<p>Transition：变化的属性 过渡时间 时间曲线 开始时间</p>
<p>变化的属性：所有属性过渡效果一样时可以用all代表，不相同则需逗号隔开重写</p>
<p>过渡时间：s为单位，必须写，包括0</p>
<p>时间曲线：linear匀速 ease变慢 ease-in 加速  ease-out减速 ease-in-out先加速后减速</p>
<p>开始时间：s为单位，必写</p>
<p>Transition要写在变化的元素内而不是元素的hover内</p>
<p><strong>移动</strong></p>
<p>Transform:translate（xxpx xxpx）； 第一个为x轴方向移动距离,第2个为y轴方向移动距离</p>
<p>盒子居中新方法：left、top（浏览器一般长度） 然后 transform：translate（-盒子一半宽度 -盒子一半长度）</p>
<p>translate如果用百分比则是以元素本身长宽为基准</p>
<p>translateX：沿x轴移动</p>
<p>translateY：沿y轴移动</p>
<p>translateZ：沿Z轴移动</p>
<p><strong>缩放</strong></p>
<p>Transform:scale（任何正整数） 0-0.99是缩小 大于1是放大</p>
<p><strong>旋转</strong></p>
<p>Transform：rotate（xxdeg）； deg是度数单位 </p>
<p>改变旋转中心</p>
<p>Transform-origin：xxpx xxpx（方位词 方位词）；（写在变化元素标签内，而不是动作内）</p>
<p>Transform-style  指定嵌套元素如何在3d空间中呈现</p>
<p>属性值 flat（默认值）：所有子元素在2D平面呈现</p>
<p>Preserve-3d：表示所有子元素在3D空间中呈现</p>
<p>translate3d(x方向的偏移，y方向的偏移，z方向的偏移）</p>
<p>scale3d（x方向的缩放，y方向的缩放，z方向的缩放）</p>
<p>rotate3d（x方向向量，y方向向量，z方向向量，旋转角度） </p>
<p><strong>倾斜</strong></p>
<p>Transform：skew（xxdeg xxdeg）； 第一个为x轴方向倾斜,正值向右负值向左</p>
<p>第二个为y轴倾斜方向,正值向上负值向下</p>
<p><strong>Web坐标轴</strong></p>
<p>左右是x轴负、正方向</p>
<p>上下是y轴负、正方向</p>
<p>朝外朝内是z轴正负方向</p>
<p>rotateX：绕x轴旋转</p>
<p>rotateY：绕y轴旋转</p>
<p>rotateZ：绕z轴旋转</p>
<p><strong>透视属性</strong></p>
<p>Perspective：xxpx;</p>
<p>Persperctive 代表着观察者眼睛到屏幕的距离,赋予3d效果</p>
<p>数值越小透视效果越好 数值越大透视效果越差</p>
<p>perspective-origin:xxpx  xxpx；设置观察的角度</p>
<p><strong>动画</strong></p>
<p><strong>引用动画</strong></p>
<p><strong>Animation:动画名称 持续时间 时间曲线 启动时间 播放次数 是否反方向</strong></p>
<p>animation-fill-mode设置动画结时的状态</p>
<p>属性值：forward 动画结束时保持状态 backward 动画结束时不保持状态，在设置了动画延时的前提下，如果动画有初始状态，那么会立刻进行到初始状态  both：会保留动画结束的初始状态,在设置了动画延时的前提下，如果动画有初始状态，那么会立刻进行到初始状态 </p>
<p>animation-play-state:running(paused)设置动画播放状态</p>
<p><strong>动画持续时间还有个属性值为steps（n）  就是将动画分为n步执行</strong></p>
<p><strong>定义动画</strong></p>
<p>@keyframes 动画名称 {from{}   to{}       }或者 {百分数{} 百分数{} 百分数{}}</p>
<p>时间曲线同transition</p>
<p>播放次数 infinite无限次播放</p>
<p>方向：</p>
<ol>
<li>normal 正常方向</li>
<li>Reverse 反方向</li>
<li>Alternate 先正常后反方向，不断交替</li>
<li>Alternate-reverse： 先反方向再正常，不断交替</li>
</ol>
<p><strong>多列布局</strong></p>
<p>column-count:设置分成的列数</p>
<p>column-rule：宽度 线条样式 颜色；     设置列之间的样式</p>
<p>coulumn-gap：xxpx；    设置列之间的距离</p>
<p>column-width：设置每一列的宽度  如果设置宽度比当前列数所默认的宽度小，则不改变，如果比较大，则取其值并铺满整个浏览器；</p>
<p>column-span：设置某个元素跨越的列数，只有1和all两个选项；</p>
<p><strong>BFC（块级格式化上下文）：是一个独立的渲染区域,只有Block-level box参与,它规定了内部的Block-Level Box如何布局，并且与这个区域外部毫不相干</strong></p>
<p><strong>具有BFC条件的元素模式：block、list-item、table</strong></p>
<p>触发BFC的属性：</p>
<ol>
<li>float属性不为none</li>
<li>Position为absolute或fixed</li>
<li>Display为inline-block、table-cell、table-caption、flex、inline-flex</li>
<li>Overflow不为visible</li>
</ol>
<p><strong>BFC特性</strong></p>
<ol>
<li>BFC中，盒子从顶端垂直的一个接一个排列</li>
<li>属于同一个BFC的两个相邻盒子的margin会发生重叠   </li>
<li>BFC中，每一个盒子的左外边缘会触碰到容器的左边缘</li>
<li>BFC的区域不会与浮动盒子产生交集，而是紧贴浮动边缘   （用于产生浮动盒子旁边的自适应盒子）</li>
<li>计算BFC的高度时，自然也会检测浮动的盒子高度  （用于清除浮动）</li>
</ol>
<p><strong>作用</strong></p>
<ol>
<li>清除浮动</li>
</ol>
<p>给父盒子激活BFC就可以</p>
<ol>
<li>解决外边距合并</li>
</ol>
<p>用另一个BFC盒子将两个盒子中的一个包起来，即可解决</p>
<ol>
<li>产生浮动盒子旁的自适应盒子</li>
</ol>
<p>将新盒子激活BFC，就不会跑到浮动盒子下面，而是与其紧贴</p>
<p><strong>渐进增强：构建网站时先满足低版本再考虑高版本</strong></p>
<p><strong>优雅降级：与上者相反</strong></p>
<p><strong>浏览器前缀</strong></p>
<p>-webkit-：chrome ，safari，android，browser</p>
<p>-moz-：firefox</p>
<p>-o-：opera</p>
<p>-ms-：ie，edge</p>
<p>-khtml-：konqueror</p>
<p><strong>背景颜色渐变（因为兼容性问题严重，所以需要加浏览器前缀）</strong></p>
<p>线性渐变：</p>
<p>background:-浏览器前缀- linear-gradient(渐变起始位置， 起始颜色， 结束颜色)；</p>
<p>background:-浏览器前缀- linear-gradient(渐变起始位置， 起始颜色 百分比， 结束颜色 百分比)；用渐变起始位置就需要加浏览器前缀</p>
<p>background:linear-gradient（point/angle,颜色 位置，颜色 位置 颜色 位置….）</p>
<p>point：to left(从右到左）,to right,to top,to bottom（默认值）</p>
<p>angle：对应上面为270deg，90deg，0deg，180deg</p>
<p>用point/angle就不用加浏览器前缀</p>
<p>径向渐变</p>
<p>background:radial-gradient(形状 大小 发散位置，颜色 位置，颜色 位置，颜色 位置，。。。）；</p>
<p>形状：默认为ellipse（即自动适配当前形状），circle（圆形）</p>
<p>大小：closest-corner、closest-side、farthest-corner、farthese-side</p>
<p>发散位置：at xxpx xxpx或at 方位词 方位词（默认在正中心）</p>
<p>重复渐变</p>
<p>repeating-radial(linear)-gradient:属性值同上</p>
<p><strong>三大标签优化</strong></p>
<p><strong>Title</strong> </p>
<title>标题</title>

<p>长度：google（35中文） baidu（28个中文）</p>
<p>最先出现的词语的权重越高</p>
<p>建议：首页标题：网站名（产品名）-网站的介绍</p>
<p><strong>Description</strong></p>
<Meta name=“description” content=“内容” />

<p>搜索结构的部分摘要，即简要说明我们的网站是做什么的</p>
<p>注意：不要超过120个汉字，用英文逗号</p>
<p><strong>Keyword</strong></p>
<Meta name=“keyword” content=“内容” />

<p>页面关键词，搜索引擎关注点之一，限制在6-8个关键词左右</p>
<p>布局时为了防止浏览器缩小时两个元素重叠，可以将两个元素先定位到相反的位置，然后再用translate移动到目的位置</p>
<p>实现打字动画效果，可以先将完整文字图片的宽度改为0，再利用trasnform将宽度改回来，并用steps分步执行</p>
]]></content>
  </entry>
  <entry>
    <title>html</title>
    <url>/2020/02/03/html/</url>
    <content><![CDATA[<p>HTML：超文本标签语言</p>
<p>h5并不是新语言，而是html语言的第五个版本</p>
<p>支持：所有主流浏览器都支持h5（chrome，Firefox，safari。。。）。IE9（部分支持）及以上支持h5，但是ie8（完全不支持）及以下不支持h5.</p>
<p>增加了新特性:语义特性，本地存储特性，网页多媒体，二维三维，特效。</p>
<p>HTML骨架:</p>
<html> 根标签/根节点

<pre><code>&lt;head&gt; 用于存放title、meta、base、style、script、link</code></pre><p>​              <title></title>标题标签</p>
<pre><code>&lt;/head&gt;

&lt;body&gt;主体标签

&lt;/body&gt;</code></pre></html>



<p>标签分类:双标签 &lt;标签名&gt;内容&lt;/标签名&gt;</p>
<p>​         单标签 &lt;标签名/&gt; 如换行标签<br /></p>
<p>标签关系</p>
<p>1.嵌套关系：如html是所有标签的父标签、</p>
<p>2.并列关系：如head和body标签</p>
<p>如果两个标签是嵌套关系，子元素最好缩进一个tab的身位。若是并列关系，最好上下对齐。</p>
<p>sublime快速生成html骨架：1.html：5后tab 2.！后tab   *快速生成必备插件：emmet</p>
<!DOCTYPE xxx><p>标签作用：告诉我们使用哪个html版本</p>
<p>如&lt;！DOCTYPE html&gt;说明使用的是h5版本</p>
<p>字符集</p>
<p>utf-8：包含全世界所有国家需要用到的字符</p>
<p>gb2312：简体中文</p>
<p>BIG5：繁体中文</p>
<p>GBK：包含全部中文字符</p>
<p>标签的语义化：指标签的含义</p>
<p>遵循的原则：先确定语义的html，再选合适的CSS</p>
<hr>
<p>HTML标签：</p>
<p>一、排版标签：</p>
<p><strong>1.标题标签：<h1></h1> <h2></h2>  <h3></h3> <h4></h4> <h5></h5></strong> </p>
<p><strong>2.段落标签：<p> 文本内容 </p></strong> </p>
<p><strong>3.水平线标签：<hr />(单标签) 增加一条线 hr=horizon</strong></p>
<p><strong>4.换行标签：<br /> br=break</strong></p>
<p><strong>5.div span标签：网页布局的两个主要盒子  div=division</strong></p>
<p><strong>二、文本格式化标签</strong></p>
<p><strong>1.字体加粗：<strong> </strong></strong></p>
<p><strong>2.字体倾斜：<em> </em></strong> </p>
<p><strong>3.字体加删除线:<del> </del></strong></p>
<p><strong>4.字体加下划线：<ins> </ins></strong></p>
<p>标签属性</p>
<p>基本语法格式：</p>
<p>&lt;标签名 属性1=“属性值” 属性2=“属性值2” …&gt;内容&lt;/标签名&gt;</p>
<p>在上面的语法中，</p>
<ol>
<li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面</li>
<li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li>
<li>任何标签的属性都有默认值，省略该属性则取默认值</li>
</ol>
<p>采取 键值对 的格式 key=”value”的格式</p>
<ol>
<li>图像标签</li>
</ol>
<p>基本语法格式</p>
<img src=”图像URL(图像路径)” />



<p><img />标记属性</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>src</td>
<td>URL</td>
<td>图像的路径</td>
</tr>
<tr>
<td>alt</td>
<td>文本</td>
<td>图像不能显示时的替换文本</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td>鼠标悬停时显示的内容</td>
</tr>
<tr>
<td>width</td>
<td>像素</td>
<td>图像宽度</td>
</tr>
<tr>
<td>height</td>
<td>像素</td>
<td>图像高度</td>
</tr>
<tr>
<td>border</td>
<td>像素</td>
<td>边框宽度</td>
</tr>
</tbody></table>
<p>四、链接标签</p>
<p>基本语法格式：</p>
<p><a href=”跳转目标”  target=”目标窗口的弹出方式”>文本或图像</a></p>
<p>Href用于指定链接目标的url地址，当为标签应用href属性值时，它就具有了超链接的功能</p>
<p>Target用于指定链接页面打开方式，有_self和_blank两种取值，其中self为默认值，blank为在新窗口中打开方式。</p>
<p>即如果想要对元素添加点击链接功能，则需要对其加上链接标签即a标签</p>
<p>注意</p>
<ol>
<li>外部链接 需要添加http://</li>
<li>内部链接 直接链接内部页面名称即可 比如<a href=”index.html”>首页</a></li>
<li>如果没有确定链接目标，通常将链接标签的href属性值定义为”#”，表示该链接暂时为一个空链接</li>
<li>除了文本，图像表格音频视频等都可以添加超链接 如<a href="img标签.html" target="blank"><img src="C:\Users\Administrator\Desktop\炜\photo\职业照小.jpeg"></a></li>
</ol>
<p>锚点定位</p>
<p>&lt;a href=”#id=uu”&gt;xxx</a>  记得添加#和””号！！！！！非常重要！！！！！</p>
<p><strong>&lt;标签名 id=uu&gt; &lt;/标签名&gt;</strong></p>
<p><strong>详例见锚点定位.html</strong></p>
<p><strong>Base标签</strong></p>
<p><strong>在head中添加&lt;base target=**</strong>”<strong><strong>_blank</strong></strong>”** <strong>/&gt; 可实现所有链接都以新窗口打开，同理_blank改为_self则实现所有链接都以自身窗口打开</strong></p>
<p><strong>若想实现其中某个链接以不同方式打开，则对其单独设置target属性即可。</strong></p>
<p>特殊字符代码  都要记得加“&amp;”</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C82ebc9a4baca484fb7f9cd0477d539a4%5Cimage1.jpeg" alt="img"></p>
<p>重点记住前三个</p>
<p>注释标签</p>
<!--xxx--> 养成注释的习惯！！！！！！！！

<hr>
<p>路径</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5Ce6f5ebdbf91641cc960c2ec462f7cdb6%5Cimage2.png" alt="img"></p>
<p>一般不用绝对路径</p>
<hr>
<p>无序列表：各个列表项之间没有顺序级别之分，是并列的（没有顺序数字前戳）。</p>
<p>基本语法格式：</p>
<ul>

<li>列表项1</li>

<li>列表项2</li>

<li>列表项3</li>

<p>…</p>
</ul>

<p>注意事项：</p>
<p>1.<ul></ul>之间只能嵌套<li></li>，直接在<ul></ul>标签中输入其他标签或者文字的做法是不被允许的。</p>
<p>2.<li></li>之间相当于一个容器,可以容纳所有元素</p>
<p>3.无序列表的样式可让CSS来完成设置</p>
<p>有序列表：带顺序数字前缀的列表</p>
<p>基本语法格式：</p>
<ol>

<li>列表项</li>

<p>….</p>
</ol>

<p>注意事项与无序列表相同</p>
<p>自定义列表(理解即可）：常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。一般用于网页结尾。</p>
<p>基本语法：</p>
<dl>

<dt>名词1</dt>

<dd>名词1解释1</dd>

<dd>名词1解释2</dd>

<p>…</p>
<dt>名词2</dt>

<dd>名词2解释1</dd>

<dd>名词2解释2</dd>

<p>…</p>
</dl>

<hr>
<p>表格创建</p>
<p>基本语法格式：</p>
<table>

<tr>

<td>单元格内的文字</td>

<p>…</p>
</tr>

<p>…</p>
</table>



<p>Table为整体框架</p>
<p>Tr为行数</p>
<p>Td为每一行内的单元格数（没有列的说法）</p>
<p>注意事项：table里只能放tr标签，不能放其他。而td里可以放任何东西。</p>
<p> 表格属性</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C7c0dd2f545344c858703714d38d9ac0c%5Cimage3.jpeg" alt="img"></p>
<p>表头标签</p>
<p>把表头的<td>换成<th>，会自动加粗居中。</p>
<p>表头结构</p>
<p>表格布局时可分为头部主体和页脚</p>
<thead></thead>:用于定义表格头部

<tbody></tbody>:用于定位表格主体

<p>以上两种都不显示，只是用于布局。</p>
<p>表格标题</p>
<caption>标题</caption> 写在table标签内



<p>合并单元格</p>
<p>跨行合并：rowspan 跨列合并：colspan</p>
<p>合并单元格的思想：将多个内容合并的时候，会有多余的东西，将其删除。例如把3个td合并成一个，就多于2个，需要删除</p>
<p>公式 删除的个数=合并的个数-1</p>
<p>表格不要纠结于外观，是CSS的作用</p>
<hr>
<p>表单</p>
<p>组成：表单控件，提示信息，表单域3个部分构成</p>
<p>input控件（重点）为单标签</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5Cb8bb4525045b46be8f42a7231e6d90b1%5Cimage4.jpeg" alt="img"></p>
<p>Type中image可以设置按钮为其他图像 <input type="image" src="img/三国.jpg"></p>
<p>File可以用来上传文件 添加multiple属性可以上传多个文件</p>
<p>如果单选框是同一组，那么可以通过name属性来设置为一组，从而限制选择</p>
<p>Value可以改变按钮中的文本</p>
<p>Checked可以设置默认选项 即<input type=”button” checked=”checked” /></p>
<p>Maxlength可以设置其最大输入字符数</p>
<p>H5input新增的type类型</p>
<p><img src="C:%5CUsers%5CWHO%5CAppData%5CLocal%5CYNote%5Cdata%5Cqq84C281D5A87880FDA451FD57E40936A6%5C65e65ee41d4e4897ad55da4abd86fb65%5Cimage5.jpeg" alt="img"></p>
<p>email 用于填写邮箱，填写时必须有@符号，同时包含服务器域名。如不能满足验证，则会阻止当前的数据提交</p>
<p>tel 用于填写号码，不是用来验证，是为了能在移动端打开键盘时打开数字键盘。即限制了用户只能输入数字</p>
<p>url填写网址。只能输入合法的网址，必须包含http：//</p>
<p>number 只能输入数字 其中 max最大值 min最小值 value默认值</p>
<p>新增占位符焦点多选等属性（即input中的属性值）</p>
<p>color 选择颜色</p>
<p>Label标签的使用</p>
<p>若想实现点击文字就可进入文本框，则可用label标签包裹整个表单选项</p>
<p>如：<label>输入账号：<input type="text" /></label> </p>
<p>若有多个输入框，想定位到某个，则对目标框设置id，然后<label for=”id”></label></p>
<p>若想实现大量文本输入，则可用textarea标签</p>
<p>语法：<textarea>请输入留言</textarea></p>
<p>下拉菜单：用select标签</p>
<select>

<p>​        <option  >北京</option></p>
<p>​        <option selected="selected" >上海</option></p>
<p>​        <option >广州</option></p>
<p>​        <option >深圳</option></p>
</select>

<p>其中selected=”selected”代表默认选项</p>
<p>option也可以为单标签，效果一样</p>
<p>表单域：即整个表单框架</p>
<p>基本语法：</p>
<form action=”url地址” method=”提交方式” name=”表单名称”>

<p>各种表单控件</p>
</form>

<p>常用属性：</p>
<p>Action:表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址</p>
<p>Method：用于设置表单数据的提交方式，其取值为get或post</p>
<p>Name：用于指定表单的名称，以区分同一个页面中的多个表单。</p>
<p>注意：每个表单都要有自己的表单域</p>
<hr>
<p>html文档类型和字符集</p>
<p> HTML:sublime输入html：4s</p>
<p>HTML5:sublime输入html：5 或 ！</p>
<p>XHTML:sublime输入html：xt</p>
<p>H5中字符集写法：<meta charset=”UTF-8”></p>
<p>H5常用新标签</p>
<p>Header：定义文档的页眉 头部</p>
<p>Nav：定义导航链接的部分</p>
<p>Footer：定义文档或节的页脚 底部</p>
<p>Article：定义文章</p>
<p>Section：定义文档中的节</p>
<p>Aside：定义其所处内容之外的内容 侧边</p>
<p>Datalist：标签定义选项列表，请与input元素配合使用该元素</p>
<p>Fieldset:可将表单内的相关元素分组，打包</p>
<p>Datalist用法</p>
<p>通过设置id并在input中的list属性链接这个id，从而达到智能显示的效果</p>
<p><input type="text" value="输入明星" list="star">     <!-- input里面用list --></p>
<p><datalist id="star">  <!-- datalist里面用id实现和input的链接 --></p>
<p>​        <option >刘德华</option></p>
<p>​        <option >郭富城</option></p>
<p>​        <option >黎明</option></p>
<p>​        <option >张学友</option></p>
<p>​        <option >叼你妈</option></p>
<p>​        <option >臭傻逼</option></p>
<p>​        <option >曹尼玛</option></p>
<p>​        <option >吃屎吧</option></p>
</datalist>

<p>datalist与selection的区别:前者不仅可以选择，还可以输入。</p>
<p>datalist弊端：在不同浏览器的显示不同，少用</p>
<p>如果与之连接的input type值为url，则其value值必须添加http://</p>
<p>Fieldset用法：</p>
<p>与legend搭配使用，legend包含在fieldset里面负责写标题。例：</p>
<fieldset>

<p>​        <legend>用户登录</legend>   <!-- 标题 --></p>
<p>​        用户名：<input type="text"> <br /></p>
<p>​        密　　码：<input type="password"></p>
</fieldset> 



<p>常用属性值</p>
<p>Placeholder 可实现用户输入时里面的文字消失，删除所有文字，自动返回</p>
<p>Autofocus：实现打开网页时，光标自动定位到其所在表单</p>
<p>Autocomplete：实现自动记录表单内容，再次输入时可智能提示</p>
<p>用法：用户名：<input type="text" autocomplete="on" name="username"></p>
<p>​                <input type="submit"></p>
<p>注意：必须要有提交按钮。其次表单必须要有名字。</p>
<p>required：要求必须输入</p>
<p>pattern:正则表达式验证</p>
<p>multiple 实现上传填写多个东西</p>
<p>form：指定某个表单id，再将当前表单的form属性值设置为与其id相同。在将来指定id号的表单进行数据提交的时候，也会将当前表单元素的数据进行提交</p>
<p>————————————————————————————————————————————</p>
<p>多媒体标签</p>
<p>引用网上的视频：embed</p>
<p>引用本地视频：video 三种格式：mp4、ogg、wmv</p>
<p>引用本地音频：audio 三种格式：mp3、ogg、wav</p>
<p>常用属性 ：autoplay控制自动播放  controls：添加进度条等控制元素</p>
<p>Loop：x 循环播放x次 poster：设置视频封面</p>
<p>​    <!-- 从上往下一个个尝试 --></p>
<pre><code>&lt;video controls&gt;</code></pre><p>​        <source src="xx.mp4"></p>
<p>​        <source src="xx.flv"></p>
<p>​    </video></p>
<p>———————————————————————————————————————————</p>
<!-- 解决低版本浏览器新标签不兼容的措施 -->

<p>​    <!-- 1.通过创建新标签并转化标签模式 --></p>
<p>​    &lt;!– <script></p>
<p>​        document.createElement("名字")   默认为行级元素</p>
<p>​    </script> –&gt;</p>
<p>​    <!-- 2.通过引入第三方插件 --></p>
<pre><code>&lt;script src=&quot;../html5shiv.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>其他标签</p>
<p>keygen 实现加密 产生私钥和公钥，私钥客户端对信息进行二次加密后与公钥一起发给服务器，服务器再通过公钥对其解密</p>
<p>output输出信息</p>
]]></content>
  </entry>
  <entry>
    <title>如何创建hexo博客</title>
    <url>/2020/02/03/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="如何创建hexo博客"><a href="#如何创建hexo博客" class="headerlink" title="如何创建hexo博客"></a>如何创建hexo博客</h1><p>1、下载node</p>
<p><a href="http://nodejs.cn" target="_blank" rel="noopener">http://nodejs.cn</a></p>
<p>2、安装淘宝npm（cnpm）</p>
<p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p>
<p>3、下载hexo博客框架</p>
<p>cnpm  install -g hexo-cli</p>
<p>4、博客初始化</p>
<p>hexo init</p>
<p>5、启动博客</p>
<p> hexo s</p>
<p>可以通过   <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  进行访问</p>
<p>6、创建我的第一篇博客</p>
<p> hexo n “我的第一篇博客”</p>
<p>7、下载插件，用来部署到github上</p>
<p>cnpm install –save hexo-deployer-git</p>
<p>8、在github上创建一个仓库</p>
<p><img src="Y:%5Chexo%5Cpic%5Ca.png" alt=""></p>
<p>如图，第一个名称 Mikasayooooo 必须与仓库所有者 Mikasayooooo 相同</p>
<p>9、hexo根目录下的   有个_config.yml, 在最后面 修改里面的  deploy  配置项</p>
<p><img src="Y:%5Chexo%5Cpic%5Cb.png" alt=""></p>
<p>如图，repo 里的修改为自己的github地址</p>
<p>10、部署到github上</p>
<p>hexo d</p>
<p>刷新github，就会发现github上多了博客的一些内容</p>
<p>11、运行  hexo s ，就能通过github地址来进行访问</p>
<p><img src="Y:%5Chexo%5Cpic%5Cc.png" alt=""></p>
<p>12、博客主体太丑</p>
<p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p>
<p>下载到   themes  文件夹下   </p>
<p>git clone  你选择的主题地址</p>
<p>修改hexo根目录下的  _config.yml   ： theme ： 主题名称</p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2020/02/03/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>我的第一篇博客</p>
]]></content>
  </entry>
</search>
